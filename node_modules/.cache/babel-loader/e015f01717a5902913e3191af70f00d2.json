{"ast":null,"code":"var _jsxFileName = \"/Users/daniellesuper/Sites/elevationsoftware/src/components/Form/Button.js\";\n// Dependencies\nimport React, { Component, PropTypes } from 'react';\n\nclass Button extends Component {\n  // Info on React PropTypes:\n  // https://facebook.github.io/react/docs/typechecking-with-proptypes.html\n  constructor(props) {\n    super(props);\n    this.state = {\n      isClicked: false\n    };\n    this.logFormDataToConsole = this.logFormDataToConsole.bind(this);\n  }\n\n  logFormDataToConsole(event) {\n    console.log('Form Values', this.props.formValues);\n    this.setState({\n      isClicked: true\n    });\n  }\n\n  render() {\n    return React.createElement(\"button\", {\n      disabled: this.state.isClicked,\n      onClick: this.logFormDataToConsole,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Contact Us\");\n  }\n\n}\n\nButton.propTypes = {\n  email: PropTypes.string.isRequired,\n  formValues: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    message: PropTypes.string.isRequired\n  }).isRequired\n};\nexport default Button;","map":{"version":3,"sources":["/Users/daniellesuper/Sites/elevationsoftware/src/components/Form/Button.js"],"names":["React","Component","PropTypes","Button","constructor","props","state","isClicked","logFormDataToConsole","bind","event","console","log","formValues","setState","render","propTypes","email","string","isRequired","shape","name","message"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;;AAGA,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAC7B;AACA;AAUAG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAGA,SAAKC,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BC,IAA1B,CAA+B,IAA/B,CAA5B;AACD;;AAEDD,EAAAA,oBAAoB,CAACE,KAAD,EAAQ;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,KAAKP,KAAL,CAAWQ,UAAtC;AACA,SAAKC,QAAL,CAAc;AAAEP,MAAAA,SAAS,EAAE;AAAb,KAAd;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,WACE;AACE,MAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWC,SADvB;AAEE,MAAA,OAAO,EAAE,KAAKC,oBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAQD;;AAlC4B;;AAAzBL,M,CAGGa,S,GAAY;AACjBC,EAAAA,KAAK,EAAEf,SAAS,CAACgB,MAAV,CAAiBC,UADP;AAEjBN,EAAAA,UAAU,EAAEX,SAAS,CAACkB,KAAV,CAAgB;AAC1BC,IAAAA,IAAI,EAAEnB,SAAS,CAACgB,MAAV,CAAiBC,UADG;AAE1BF,IAAAA,KAAK,EAAEf,SAAS,CAACgB,MAAV,CAAiBC,UAFE;AAG1BG,IAAAA,OAAO,EAAEpB,SAAS,CAACgB,MAAV,CAAiBC;AAHA,GAAhB,EAITA;AANc,C;AAkCrB,eAAehB,MAAf","sourcesContent":["// Dependencies\nimport React, { Component, PropTypes } from 'react';\n\n\nclass Button extends Component {\n  // Info on React PropTypes:\n  // https://facebook.github.io/react/docs/typechecking-with-proptypes.html\n  static propTypes = {\n    email: PropTypes.string.isRequired,\n    formValues: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      email: PropTypes.string.isRequired,\n      message: PropTypes.string.isRequired,\n    }).isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isClicked: false,\n    };\n    this.logFormDataToConsole = this.logFormDataToConsole.bind(this);\n  }\n\n  logFormDataToConsole(event) {\n    console.log('Form Values', this.props.formValues);\n    this.setState({ isClicked: true });\n  }\n\n  render() {\n    return (\n      <button\n        disabled={this.state.isClicked}\n        onClick={this.logFormDataToConsole}\n      >\n        Contact Us\n      </button>\n    );\n  }\n}\n\nexport default Button;"]},"metadata":{},"sourceType":"module"}