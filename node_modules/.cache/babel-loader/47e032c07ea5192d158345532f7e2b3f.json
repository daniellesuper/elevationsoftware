{"ast":null,"code":"var _jsxFileName = \"/Users/daniellesuper/Sites/elevationsoftware/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport './styles/App.scss';\nimport history from './services/history';\nimport Routes from './routes';\nimport PropTypes from \"prop-types\";\nimport SideDrawer from './components/SideDrawer/SideDrawer.jsx';\nimport Backdrop from './components/Backdrop/Backdrop.jsx'; //import { css } from \"@emotion/core\";\n//import ClipLoader from \"react-spinners/ClipLoader\";\n//import Loader from './components/Loader/Loader';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sideDrawerOpen: false\n    };\n\n    this.drawerToggleClickHandler = () => {\n      this.setState(prevState => {\n        return {\n          sideDrawerOpen: !prevState.sideDrawerOpen\n        };\n      });\n    };\n\n    this.backdropClickHandler = () => {\n      this.setState({\n        sideDrawerOpen: false\n      });\n    };\n  }\n\n  render() {\n    let backdrop;\n\n    if (this.state.sideDrawerOpen) {\n      backdrop = React.createElement(Backdrop, {\n        click: this.backdropClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Router, {\n      history: history,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Routes, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;\nApp.propTypes = {\n  children: React.PropTypes.node\n};","map":{"version":3,"sources":["/Users/daniellesuper/Sites/elevationsoftware/src/App.js"],"names":["React","Component","BrowserRouter","Router","history","Routes","PropTypes","SideDrawer","Backdrop","App","state","sideDrawerOpen","drawerToggleClickHandler","setState","prevState","backdropClickHandler","render","backdrop","propTypes","children","node"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAuC,kBAAvC;AACA,OAAO,mBAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,QAAP,MAAqB,oCAArB,C,CAEA;AACA;AACA;;AAEA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BS,KAD0B,GAClB;AACNC,MAAAA,cAAc,EAAE;AADV,KADkB;;AAAA,SAK1BC,wBAL0B,GAKC,MAAM;AAC/B,WAAKC,QAAL,CAAeC,SAAD,IAAe;AAC3B,eAAO;AAACH,UAAAA,cAAc,EAAE,CAACG,SAAS,CAACH;AAA5B,SAAP;AACD,OAFD;AAGD,KATyB;;AAAA,SAU1BI,oBAV0B,GAUH,MAAM;AAC3B,WAAKF,QAAL,CAAc;AAACF,QAAAA,cAAc,EAAE;AAAjB,OAAd;AACD,KAZyB;AAAA;;AAc1BK,EAAAA,MAAM,GAAG;AACP,QAAIC,QAAJ;;AACA,QAAI,KAAKP,KAAL,CAAWC,cAAf,EAA+B;AAC7BM,MAAAA,QAAQ,GAAG,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,KAAKF,oBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAX;AACD;;AACD,WACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEX,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAMD;;AAzByB;;AA2B5B,eAAeK,GAAf;AAEAA,GAAG,CAACS,SAAJ,GAAgB;AACdC,EAAAA,QAAQ,EAAEnB,KAAK,CAACM,SAAN,CAAgBc;AADZ,CAAhB","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router} from \"react-router-dom\";\nimport './styles/App.scss';\nimport history from './services/history';\nimport Routes from './routes';\nimport PropTypes from \"prop-types\";\nimport SideDrawer from './components/SideDrawer/SideDrawer.jsx';\nimport Backdrop from './components/Backdrop/Backdrop.jsx';\n\n//import { css } from \"@emotion/core\";\n//import ClipLoader from \"react-spinners/ClipLoader\";\n//import Loader from './components/Loader/Loader';\n\nclass App extends Component {\n  state = {\n    sideDrawerOpen: false\n  };\n\n  drawerToggleClickHandler = () => {\n    this.setState((prevState) => {\n      return {sideDrawerOpen: !prevState.sideDrawerOpen};\n    });\n  };\n  backdropClickHandler = () => {\n    this.setState({sideDrawerOpen: false});\n  };\n\n  render() {\n    let backdrop;\n    if (this.state.sideDrawerOpen) {\n      backdrop = <Backdrop click={this.backdropClickHandler}/>\n    }\n    return (\n      <Router history={history}>\n        <Routes />\n      </Router>\n      \n  );\n  }\n}\nexport default App;\n\nApp.propTypes = {\n  children: React.PropTypes.node,\n};"]},"metadata":{},"sourceType":"module"}