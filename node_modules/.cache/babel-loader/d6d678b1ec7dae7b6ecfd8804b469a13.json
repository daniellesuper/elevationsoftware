{"ast":null,"code":"var _jsxFileName = \"/Users/daniellesuper/Sites/elevationsoftware/src/pages/_layouts/default/index.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Wrapper, Header } from \"./styles\";\nexport default function DefaultLayout({\n  children\n}) {\n  return React.createElement(React.Fragment, null, React.createElement(Toolbar, {\n    drawerClickHandler: this.drawerToggleClickHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }), React.createElement(SideDrawer, {\n    show: this.state.sideDrawerOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }), backdrop, this.props.children, React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }));\n}\nDefaultLayout.propTypes = {\n  children: PropTypes.element.isRequired\n};","map":{"version":3,"sources":["/Users/daniellesuper/Sites/elevationsoftware/src/pages/_layouts/default/index.jsx"],"names":["React","PropTypes","Wrapper","Header","DefaultLayout","children","drawerToggleClickHandler","state","sideDrawerOpen","backdrop","props","propTypes","element","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,UAAhC;AAEA,eAAe,SAASC,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAqC;AAClD,SACE,0CACE,oBAAC,OAAD;AAAS,IAAA,kBAAkB,EAAE,KAAKC,wBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGC,QAHH,EAIG,KAAKC,KAAL,CAAWL,QAJd,EAKE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD;AAEDD,aAAa,CAACO,SAAd,GAA0B;AACxBN,EAAAA,QAAQ,EAAEJ,SAAS,CAACW,OAAV,CAAkBC;AADJ,CAA1B","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Wrapper, Header } from \"./styles\";\n\nexport default function DefaultLayout({ children }) {\n  return (\n    <>\n      <Toolbar drawerClickHandler={this.drawerToggleClickHandler} />\n      <SideDrawer show={this.state.sideDrawerOpen} />\n      {backdrop}\n      {this.props.children}\n      <Footer />\n    </>\n  );\n}\n\nDefaultLayout.propTypes = {\n  children: PropTypes.element.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}