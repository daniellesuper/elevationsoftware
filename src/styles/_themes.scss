// global mixin declarations
@mixin flex-center( $direction ) {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: $direction;
}
@mixin sloganAndSubheading {
  h1 {
    text-align: center;
    font-family: $layout-font;
    @include themify($themes) {
      color: themed('headingColor');
    } 
  }
  h3 {
    @include themify($themes) {
      color: themed('subheadingColor');
    }
    text-align: center;
    font-family: $layout-font;
    font-style: italic;
    padding-bottom: 3%;
  }
}
@mixin boxStyle {
  @include themify($themes) {
    color: themed('bodyColor');  
  }
  flex: 1;
  font-family: $layout-font;
  padding: 3%;
  height: auto;
  letter-spacing: 2px;
  line-height: 2rem;
  ul {
    list-style-type: none;
  }
  @media (min-width: 769px){
    min-height: 565px;
  }
}
@mixin box2Style {
  @include themify($themes) {
    color: themed('bodyColor');  
  }
  flex: 1;
  font-family: $layout-font;
  padding: 3%;
  height: auto;
  letter-spacing: 2px;
  line-height: 2rem;
  @media (min-width: 769px){
    min-height: 200px;
  }
}

// variable declarations
$layout-font: 'optima', 'futura', 'sans-serif';
$toolbar-height: 65px;

// theme definition
$themes: (
  1: (
    headerColor: white, // used for header, footer & sidedrawer
    footerColor: black,
    bodyColor: black,
    headerFooterTextColor: #FF3B3F,
    headerHoverTextColor: rgb(184, 33, 46) ,
    headingColor: rgb(48, 47, 47),
    subheadingColor: #A9A9A9,
    textColor: red,
  ),
  2: (
    backgroundColor: #222,
    bodyColor: #ddd,
    headerFooterTextColor: #aaa,
    headingColor: uppercase,
    subheadingColor: #ddd,
    textColor: #333,
  ),
);

// Implementation of themes
 @mixin themify($themes) {
  @each $theme, $map in $themes {
    .theme-#{$theme} & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), '#{$key}');
        $theme-map: map-merge($theme-map, ($key: $value)) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

@function themed($key) {
  @return map-get($theme-map, $key);
}
